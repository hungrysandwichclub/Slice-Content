{"version":3,"sources":["SliceContent.js"],"names":["window","ExtractText","defaults","settings","selector","parent","output","Constructor","options","Object","assign","sections","Error","document","querySelector","currentScript","parentElement","content","elements","querySelectorAll","extract","format","nextUntil","elem","filter","siblings","nextElementSibling","matches","push","prototype","i","length","innerContent","unshift","element","createElement","setAttribute","className","n","appendChild","innerHTML","remove"],"mappings":";AAAAA,OAAOC,YAAe,WACpB,aAEIC,IAMAC,EANAD,EAAW,CACbE,SAAU,GACVC,OAAQ,GACRC,OAAQ,IAUNC,EAAc,SAAUC,GAOtB,GALJL,EAAWM,OAAOC,OAAO,GAAIR,EAAUM,GAElCG,KAAAA,SAAW,IAGXR,EAASC,SAAU,MAAM,IAAIQ,MAAM,yBAEpC,GAACT,EAASE,OAGP,CACD,IAACF,EAASE,OACZ,MAAM,IAAIO,MAAM,eAAiBP,OAAS,sBACvCA,KAAAA,OAASQ,SAASC,cAAcX,EAASE,aAJzCA,KAAAA,OAASQ,SAASE,cAAcC,cAiBhC,OATFC,KAAAA,QAAU,GAEVC,KAAAA,SAAW,KAAKb,OAAOc,iBAAiBhB,EAASC,UAGjDgB,KAAAA,UACAC,KAAAA,SAGE,KAAKV,UAOVW,EAAY,SAAUC,EAAMnB,EAAUoB,GAEpCC,IAAAA,EAAW,GAIRF,IAFPA,EAAOA,EAAKG,mBAELH,IAEDA,EAAKI,QAAQvB,KAEboB,GAAWD,EAAKI,QAAQH,IAK5BC,EAASG,KAAKL,GAEdA,EAAOA,EAAKG,oBANVH,EAAOA,EAAKG,mBAQTD,OAAAA,GA0CFlB,OApCPA,EAAYsB,UAAUT,QAAU,WACzB,IAAA,IAAIU,EAAI,EAAGA,EAAI,KAAKZ,SAASa,OAAQD,IAAK,CACzCE,IAAAA,EAAeV,EAAU,KAAKJ,SAASY,GAAI,KAAK1B,UAEpD4B,EAAaC,QAAQ,KAAKf,SAASY,IAC9Bb,KAAAA,QAAQW,KAAKI,KAOtBzB,EAAYsB,UAAUR,OAAS,WACxB,IAAA,IAAIS,EAAI,EAAGA,EAAI,KAAKb,QAAQc,OAAQD,IAAK,CACxCI,IAAAA,EAAUrB,SAASsB,cAAc,OAIjC,GADJD,EAAQE,aAAa,QAAS,KAAK/B,OAAOgC,WACrClC,EAASG,OAKP,CAEA,IADDA,IAAAA,EAASO,SAASC,cAAcX,EAASG,QACpCgC,EAAI,EAAGA,EAAI,KAAKrB,QAAQa,GAAGC,OAAQO,IAC1CJ,EAAQK,YAAY,KAAKtB,QAAQa,GAAGQ,IAEtChC,EAAOiC,YAAYL,OAVC,CACf,IAAA,IAAII,EAAI,EAAGA,EAAI,KAAKrB,QAAQa,GAAGC,OAAQO,IAC1CJ,EAAQK,YAAY,KAAKtB,QAAQa,GAAGQ,IAEjCjC,KAAAA,OAAOW,cAAcuB,YAAYL,GAQnCvB,KAAAA,SAASmB,GAAKI,EAAQM,UAGxBnC,KAAAA,OAAOoC,UAGPlC,EAhHa","file":"SliceContent.013927b0.js","sourceRoot":"..","sourcesContent":["window.ExtractText = (function () {\n  \"use strict\";\n\n  var defaults = {\n    selector: \"\",\n    parent: \"\",\n    output: \"\"\n  };\n\n  var settings;\n\n  /*\n   * Setup Function Constructor\n   * @param {String} selector\n   * @param {String} parent element (optional)\n   */\n  var Constructor = function (options) {\n    // Initialise Settings from user input\n    settings = Object.assign({}, defaults, options);\n\n    this.sections = {};\n\n    // Handle selector\n    if (!settings.selector) throw new Error(\"ðŸ¤” Selector not found\");\n\n    if (!settings.parent) {\n      // Find parent from script location\n      this.parent = document.currentScript.parentElement;\n    } else {\n      if (!settings.parent)\n        throw new Error('ðŸ¤” Element \"' + parent + '\" not found in DOM');\n      this.parent = document.querySelector(settings.parent);\n    }\n\n    // Initialiser for extract function\n    this.content = [];\n\n    this.elements = this.parent.querySelectorAll(settings.selector);\n\n    // Initialise straight away\n    this.extract();\n    this.format();\n\n    // Return the sections\n    return this.sections;\n  };\n\n  /*\n   * Get all following siblings of each element up to but not including the element matched by the selector\n   * https://vanillajstoolkit.com/helpers/nextuntil/\n   */\n  var nextUntil = function (elem, selector, filter) {\n    // Setup siblings array\n    var siblings = [];\n    // Get the next sibling element\n    elem = elem.nextElementSibling;\n    // As long as a sibling exists\n    while (elem) {\n      // If we've reached our match, bail\n      if (elem.matches(selector)) break;\n      // If filtering by a selector, check if the sibling matches\n      if (filter && !elem.matches(filter)) {\n        elem = elem.nextElementSibling;\n        continue;\n      }\n      // Otherwise, push it to the siblings array\n      siblings.push(elem);\n      // Get the next sibling element\n      elem = elem.nextElementSibling;\n    }\n    return siblings;\n  };\n\n  /*\n   * Parse HTML and store in Array\n   */\n  Constructor.prototype.extract = function () {\n    for (let i = 0; i < this.elements.length; i++) {\n      let innerContent = nextUntil(this.elements[i], this.selector);\n      // Prepend header to content\n      innerContent.unshift(this.elements[i]);\n      this.content.push(innerContent);\n    }\n  };\n\n  /*\n   * Iterate though content and insert into DOM as seperate blocks\n   */\n  Constructor.prototype.format = function () {\n    for (let i = 0; i < this.content.length; i++) {\n      let element = document.createElement(\"div\");\n      // Set element class to the same as parent\n      //! This could be improved - optional use of class\n      element.setAttribute(\"class\", this.parent.className);\n      if (!settings.output) {\n        for (let n = 0; n < this.content[i].length; n++) {\n          element.appendChild(this.content[i][n]);\n        }\n        this.parent.parentElement.appendChild(element);\n      } else {\n        let output = document.querySelector(settings.output);\n        for (let n = 0; n < this.content[i].length; n++) {\n          element.appendChild(this.content[i][n]);\n        }\n        output.appendChild(element);\n      }\n      this.sections[i] = element.innerHTML;\n    }\n    // Remove original DOM element\n    this.parent.remove();\n  };\n\n  return Constructor;\n})();"]}